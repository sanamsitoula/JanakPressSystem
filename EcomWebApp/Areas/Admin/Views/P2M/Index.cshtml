@model PaginatedViewModel<P2M>

<div class="container">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">P2M List</h2>
        </div>
        <div class="col-6 text-end">
            <a asp-controller="P2M" asp-action="Create" class="btn btn-primary">
                <i class="bi bi-bag-plus"></i> Create New Procurement To Marketing
            </a>
        </div>
    </div>

    <div class="row pt-4">
        <div class="col-md-4">
            <input type="text" id="searchTitle" class="form-control mb-2" placeholder="Search by Title" />
        </div>
        <div class="col-md-4">
            <input type="text" id="searchJobType" class="form-control mb-2" placeholder="Search by Job Type" />
        </div>
        <div class="col-md-4">
            <input type="date" id="searchJobDate" class="form-control mb-2" placeholder="Search by Job Date" />
        </div>
    </div>

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>P2M Code / Job Date</th>
                <th>Product</th>
                <th>Class</th>
                <th>Subject</th>
                <th>Job Ticket /Code</th>
                <th>Per Poka Size</th>
                <th>Poka Number</th>
                <th>Product Qty</th>
                <th>Pcs Qty</th>
                <th>Total Product Qty</th>
                <th>Job Step</th>
                <th>Checked By</th>
                <th>Verified By</th>
                <th>Received By</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Model.Items)
            {
                <tr>
                    <td>@obj.Name</td>
                    <td>@obj.P2M_Code <br />@obj.P2MDate</td>
                    <td>@(obj.Product != null ? obj.Product.Title : "No Product")</td>
                    <td>@(obj.Class != null ? obj.Class.Name : "No Class")</td>
                    <td>@(obj.Subject != null ? obj.Subject.Name : "No Subject")</td>

                    <td>@(obj.JobTicket != null ? obj.JobTicket.Name : "No JobTicket") / @(obj.JobTicket != null ? obj.JobTicket.Code : "No JobTicket")</td>
                    <td>@obj.PerPokaSize</td>
                    <td>@obj.PokaNumber</td>
                    <td>@obj.ProductQuantity</td>
                    <td>@obj.PiecesQuantity</td>
                    <td>@obj.TotalProductQuantity</td>
                    <td>@obj.JobStepId.ToString()</td>
                    <td>@obj.CheckedById</td>
                    <td>@obj.VerifiedById</td>
                    <td>@obj.ReceivedById</td>
                    <td>@obj.Status</td>
                    <td>
                        <div class="w-75 btn-group" role="group">
                            <button id="cust_btn" type="button" class="btn btn-info btn-lg" data-id="@obj.Id">View</button>

                            <a asp-controller="P2M" asp-action="Delete" asp-route-Id="@obj.Id" class="btn btn-danger mx-2">
                                <i class="bi bi-trash-fill"></i> Delete
                            </a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">
            @if (Model.PageNumber > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                </li>
            }

            @if (Model.PageNumber < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Dynamic content will be inserted here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>




@section Scripts {
    <script>
        $(document).on("click", "#cust_btn", function () {

            $("#myModal").modal("toggle");
            var id = $(this).data('id');
         
            $.ajax({
                url: '@Url.Action("PopupView", "P2M")',
                type: 'GET', // or 'POST' depending on your API
                data: { id: id }, // Pass the ID parameter
                success: function (response) {
                        // Populate modal fields with the response data
            $('#JobStepId').val(response.JobStepId);
            $('#Name').val(response.Name);

                   
                    // Handle the successful response
                    console.log("Success:", response);
                    // Assuming the response is a list of data
                    var listContent = '<ul>';
                    response.forEach(function (item) {
                        listContent += '<li>' + item.name + ' - ' + item.value + '</li>'; // Customize this to match your data structure
                    });
                    listContent += '</ul>';

                    // Update the modal content
                    $('#modalContent').html(listContent);
                
                },
                error: function (error) {
                    // Handle the error response
                    console.error("Error:", error);
                }
            });

        })
        $(document).ready(function () {
            $('#searchTitle').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('table tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            $('#searchJobType').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('table tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            $('#searchJobDate').on('change', function () {
                var searchDate = new Date($(this).val());
                $('table tbody tr').each(function () {
                    var rowDate = new Date($(this).find('td:nth-child(5)').text().trim());
                    $(this).toggle(rowDate.toDateString() === searchDate.toDateString());
                });
            });
        });

  
    </script>
    <script>
        function openPopup(id) {
            $.ajax({
                url: '/P2M/View', // URL to the controller action
                type: 'GET',
                data: { Id: id },
                success: function (response) {
                    $('#modalBody').html(response); // Load the response into the modal body
                    $('#viewModal').modal('show'); // Show the modal
                },
                error: function () {
                    alert('An error occurred while loading details.');
                }
            });
        }
    </script>

}
